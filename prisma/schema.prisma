// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String               @id @default(uuid())
  fullname           String
  email              String               @unique
  password           String
  address            String
  phone              String               @db.VarChar(13)
  country            String
  state              String
  city               String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  favorite           Favorite[]
  Order              Order[]
  PasswordResetToken PasswordResetToken[]
}

model Favorite {
  id     String   @id @default(cuid())
  user   User     @relation(fields: [userId], references: [id])
  userId String
  item   MenuItem @relation(fields: [itemId], references: [id])
  itemId String

  @@unique([userId, itemId])
}

model Order {
  id            String      @id @default(cuid())
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  total         Float
  subtotal      Float
  tax           Float
  tax_rate      Float
  couponCode    String      @default("")
  discountValue Float       @default(0)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  OrderItem     OrderItem[]
}

model OrderItem {
  id       String   @id @default(cuid())
  order    Order    @relation(fields: [orderId], references: [id])
  orderId  String
  menuItem MenuItem @relation(fields: [itemId], references: [id])
  itemId   String
  quantity Int
  price    Float
}

model MenuItem {
  id          String             @id @default(cuid())
  name        String
  description String
  price       Float
  dietType    DIET               @default(VEG)
  category    IndianMenuCategory
  imageUrl    String             @default("https://assets.cntraveller.in/photos/60ba2522c28d168a1ec862a3/16:9/w_960,c_limit/Tea-.jpg")
  Favorite    Favorite[]
  OrderItem   OrderItem[]
}

model TaxRule {
  id        String   @id @default(cuid())
  country   String
  state     String?
  taxType   String
  taxRate   Float
  createdAt DateTime @default(now())
}

model CouponCode {
  id                String       @id @default(cuid())
  code              String       @unique
  discountType      DiscountType
  value             Float
  minimumOrderValue Float
  startDate         DateTime
  endDate           DateTime
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime

  user User @relation(fields: [userId], references: [id])
}

enum DiscountType {
  PERCENTAGE
  FIXED_AMOUNT
}

enum DIET {
  VEG
  NON_VEG
}

enum IndianMenuCategory {
  APPETIZERS
  MAIN_COURSES
  BREADS
  RICE
  ACCOMPANIMENTS
  DESSERTS
  BEVERAGES
}
